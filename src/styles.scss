

$spacer: 1rem !default;
$spacers: (
    0: 0,
    1: $spacer * .25,
    2: $spacer * .5,
    3: $spacer,
    4: $spacer * 1.5,
    5: $spacer * 3,
    6: $spacer * 4.5,
    ) !default;

$utilities: () !default;
$utilities: map-merge((
    "width-rem": ( // New map
        property: width,
        class: wr,
        values: $spacers 
    ),
    "height-rem": ( // New map
        property: height,
        class: hr,
        values: $spacers 
    )
), $utilities );

@import "bootstrap/scss/bootstrap";
@import "bootstrap-icons/font/bootstrap-icons.scss";

body {
    user-select: none;
}

.was-validated .form-control.ng-untouched:valid, .form-control.ng-untouched.is-valid {
    background-image: none;
}

form.was-validated input.form-control.ng-touched.ng-invalid {
    border-color: var(--bs-form-invalid-border-color);
    padding-right: calc(1.5em + 0.75rem);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right calc(0.375em + 0.1875rem) center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}

form.was-validated input.form-control.ng-touched.ng-invalid:focus, .form-control.is-valid:focus {
    border-color: var(--bs-form-invalid-border-color);
    box-shadow: 0 0 0 0.25rem rgba(var(--bs-danger-rgb), 0.25);
}

.cls-modal.modal.show {
    display: flex!important; 
    flex-direction: column; 
    justify-content: end
}

@include media-breakpoint-up(sm) {
    input::placeholder {
        color: transparent!important;
    }
}